#include<windows.h>
#include<GL/glut.h>
#include<stdlib.h>
#include<stdio.h>
#include <GL/glut.h>
#include <math.h>

void init() {
    glClearColor(1.0, 1.0, 1.0, 1.0);  // White background
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-100, 100, -100, 100);
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);

    glColor3f(1.0, 0.0, 0.0);  // Red color for the circle
    float radius = 50;
    int num_segments = 100;

    // or, glBegin(GL_POLYGON);  // Begin drawing a filled circle (polygon approximation)
    glBegin(GL_LINE_LOOP);  // Begin drawing a circle using line segments
    for (int i = 0; i < num_segments; i++) {
        float theta = 2.0f * 3.1415926f * float(i) / float(num_segments);  // Current angle
        float x = radius * cosf(theta);  // Calculate x
        float y = radius * sinf(theta);  // Calculate y
        glVertex2f(x, y);  // Output vertex
    }
    glEnd();

    glFlush();
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("OpenGL Circle");

    init();
    glutDisplayFunc(display);

    glutMainLoop();
    return 0;
}
